DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS CATEGORIES CASCADE;
DROP TABLE IF EXISTS LOCATION CASCADE;
DROP TABLE IF EXISTS EVENTS CASCADE;
DROP TABLE IF EXISTS REQUESTS CASCADE;
DROP TABLE IF EXISTS COMPILATIONS CASCADE;
DROP TABLE IF EXISTS COMPILATIONS_EVENTS CASCADE;
DROP TABLE IF EXISTS COMMENTS CASCADE;


CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    USER_NAME VARCHAR(255) UNIQUE                     NOT NULL,
    EMAIL     VARCHAR(512) UNIQUE                     NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    CATEGORY_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CATEGORY_NAME VARCHAR(100) UNIQUE                     NOT NULL,
    CONSTRAINT PK_CATEGORY PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE IF NOT EXISTS LOCATION
(
    LOCATION_ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    LAT         FLOAT,
    LON         FLOAT
);

CREATE TABLE IF NOT EXISTS EVENTS
(
    EVENT_ID                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    EVENT_TITLE              VARCHAR(300),
    EVENT_ANNOTATION         VARCHAR(500)                            NOT NULL,
    EVENT_DESCRIPTION        VARCHAR(4000)                           NOT NULL,
    EVENT_INITIATOR          BIGINT                                  NOT NULL,
    EVENT_CATEGORY           BIGINT                                  NOT NULL,
    EVENT_PAID               BOOLEAN,
    EVENT_CREATED            TIMESTAMP WITHOUT TIME ZONE,
    EVENT_DATE               TIMESTAMP WITHOUT TIME ZONE,
    EVENT_PUBLISHED_ON       TIMESTAMP WITHOUT TIME ZONE,
    EVENT_PARTICIPANT_LIMIT  BIGINT,
    EVENT_REQUEST_MODERATION BOOLEAN,
    EVENT_STATE              VARCHAR(20),
    EVENT_LOCATION           BIGINT,

    CONSTRAINT PK_EVENTS PRIMARY KEY (EVENT_ID),
    CONSTRAINT EVENTS_CATEGORY FOREIGN KEY (EVENT_CATEGORY) REFERENCES CATEGORIES (CATEGORY_ID),
    CONSTRAINT EVENT_INITIATOR FOREIGN KEY (EVENT_INITIATOR) REFERENCES USERS (USER_ID),
    CONSTRAINT EVENT_LOCATION FOREIGN KEY (EVENT_LOCATION) REFERENCES LOCATION (LOCATION_ID)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    REQUEST_ID              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    REQUEST_EVENT_INITIATOR BIGINT                                  NOT NULL,
    REQUEST_CREATED         TIMESTAMP WITH TIME ZONE                NOT NULL,
    REQUEST_EVENT           BIGINT                                  NOT NULL,
    REQUEST_REQUESTER       BIGINT                                  NOT NULL,
    REQUEST_STATUS          VARCHAR(20)                             NOT NULL,
    CONSTRAINT PK_REQUEST PRIMARY KEY (REQUEST_ID),
    CONSTRAINT FK_REQUEST_EVENT FOREIGN KEY (REQUEST_EVENT) REFERENCES EVENTS (EVENT_ID),
    CONSTRAINT FK_REQUEST_REQUESTER FOREIGN KEY (REQUEST_REQUESTER) REFERENCES USERS (USER_ID),
    CONSTRAINT FK_REQUEST_INITIATOR FOREIGN KEY (REQUEST_EVENT_INITIATOR) REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS
(
    COMPILATION_ID     BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    COMPILATION_PINNED BOOLEAN,
    COMPILATION_TITLE  VARCHAR
);

CREATE TABLE IF NOT EXISTS COMPILATIONS_EVENTS
(
    COMPILATIONS_EVENTS_COMPILATION_ID BIGINT NOT NULL,
    COMPILATIONS_EVENTS_EVENT_ID       BIGINT NOT NULL,
    CONSTRAINT FK_COMPILATION FOREIGN KEY (COMPILATIONS_EVENTS_COMPILATION_ID) REFERENCES COMPILATIONS (COMPILATION_ID),
    CONSTRAINT FK_EVENT FOREIGN KEY (COMPILATIONS_EVENTS_EVENT_ID) REFERENCES EVENTS (EVENT_ID)
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    COMMENT_ID    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    COMMENT_TEXT  VARCHAR(2000)            NOT NULL,
    COMMENT_USER  BIGINT                   NOT NULL,
    COMMENT_EVENT BIGINT                   NOT NULL,
    COMMENT_DATE  TIMESTAMP WITH TIME ZONE NOT NULL,
    CONSTRAINT FK_COMMENT_EVENT FOREIGN KEY (COMMENT_EVENT) REFERENCES EVENTS (EVENT_ID),
    CONSTRAINT FK_COMMENT_USER FOREIGN KEY (COMMENT_USER) REFERENCES USERS (USER_ID)
);

